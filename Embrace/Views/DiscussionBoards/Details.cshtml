@model Embrace.Models.DiscussionBoard

@{
    ViewData["Title"] = Model.Title;
}

<link rel="stylesheet" href="/css/discussionBoards.css" />

<div class="title-row">
    <div class="title-card">
        <div class="title-card-body">
            <div class="title-tag">
                <h2>@Model.Title</h2>
                <div class="discussion-tag @GetTagClass(@Model.DiscussionType)">@Model.DiscussionType.GetDescription()</div>
            </div>
            <div class="title-card-metadata">
                <div class="title-user">
                    <div class="title-icon-image">
                        <img src="/images/userIconLogo.png" alt="User Icon Image" />
                    </div>
                    <p>@Model.User.FirstName</p>
                </div>
                <div class="title-date-posted">
                    <div class="title-icon-image">
                        <img src="/images/clockIconLogo.png" alt="Clock Icon Image" />
                    </div>
                    <p>Posted: @Model.CreatedOn.Date.ToShortDateString()</p>
                </div>
            </div>
            <p>@Model.Content</p>
        </div>
    </div>
</div>

<div class="comments">
    @if (Model.Comments.Count != 0)
    {
        @foreach (var comment in Model.Comments)
        {
            <div class="comment-card">
                <p>@comment.Content</p>
            </div>
        }
    } else
    {
        <div class="comment-card">
            <div class="comment-card-body">
                <p>No comments yet.</p>
            </div>
        </div>
    }
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

@functions {
    // returns a CSS class based on the discussion type for coloring purposes
    private string GetTagClass(DiscussionType discussionType)
    {
        return discussionType switch
        {
            DiscussionType.Question => "question-tag",
            DiscussionType.Conversation => "conversation-tag",
            DiscussionType.MeetUp => "meetup-tag",
            DiscussionType.Announcement => "announcement-tag",
            DiscussionType.Event => "event-tag",
            DiscussionType.Other => "other-tag",
            _ => ""
        };
    }
}