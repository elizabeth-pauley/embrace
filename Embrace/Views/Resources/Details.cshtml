@using Microsoft.AspNetCore.Identity
@model Embrace.Models.Resource
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = Model.ResourceName + " Details";
}

<link rel="stylesheet" href="/css/resources.css" />
<body>
    <div class="row">
        <div class="description-column">
            <h2>@Html.DisplayFor(model => model.ResourceName)</h2>
            <div class="resource-description">@Html.DisplayFor(model => model.Description)</div>
            <a class="btn btn-primary document-button" href="@Model.WebsiteUrl" target="_blank">Visit Website</a>
        </div>
        <div class="image-column">
            @if (!string.IsNullOrEmpty(Model.LocationImage))
            {
                <img src="@Model.LocationImage" alt="Location Image" />
            }
            else if (!string.IsNullOrEmpty(Model.LogoImage))
            {
                <img src="@Model.LogoImage" alt="Logo Image" />
            } 
            else
            {
                <img src="/images/resourcePlaceholderImage.png" alt="No Resource Image Available" />
            }
        </div>
    </div>
</body>
<dl class="row">
    @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
    {
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LogoImage)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LogoImage)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LocationImage)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LocationImage)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedOn)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreatedOn)
        </dd>
    }
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.ResourceType)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.ResourceType)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.ServiceCategories)
    </dt>
    <dd class = "col-sm-10">
        @if (Model.ServiceCategories != null && Model.ServiceCategories.Any())
        {
            <ul class="service-categories">
                @foreach (var category in Model.ServiceCategories)
                {
                    <li class="checkmark-bullet">
                        @category.ServiceCategory?.Name
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No service categories listed for @Model.ResourceName.</p>
        }
    </dd>
    @if (Model.ResourceType.Equals(ResourceType.Local))
    {
        @if (!Model.Address.Equals(""))
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Address)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Address)
            </dd>
        } else
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Address)
            </dt>
            <dd class="col-sm-10">
                <p>No address currently exists for this resource. Consider visiting the organization website to learn more.</p>
            </dd>
        }
    }
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.PhoneNumber)
    </dt>
    <dd class = "col-sm-10">
        @if (!Model.PhoneNumber.Equals(""))
        {
            @Html.DisplayFor(model => model.PhoneNumber)
        } else
        {
            <p>Phone number is not currently available for @Model.ResourceName. Consider visiting the organization website to learn more.</p>
        }
    </dd>
</dl>
<div>
    @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
    }
    <a asp-action="Index">Return</a>
</div>
